/* eslint-disable import/no-extraneous-dependencies */

/**
 * GulpPress Configuration File
 *
 * @package GulpPress
 */

// eslint-disable-next-line import/no-extraneous-dependencies
import { gulppress } from '@gulppress/scripts';
{{#if_task "styles"}}const autoprefixer = require('autoprefixer');
const purgecss = require('@fullhuman/postcss-purgecss');
const purgecssWordpress = require('purgecss-with-wordpress');{{/if_task}}

export const basePath = '{{basePath}}';

// Browsers to consider for autoprefixing (https://github.com/ai/browserslist)
// The following list is set as per WordPress requirements:
// https://github.com/WordPress/gutenberg/tree/master/packages/browserslist-config
export const browserList = [
  '> 1%',
  'ie >= 11',
  'last 1 Android versions',
  'last 1 ChromeAndroid versions',
  'last 2 Chrome versions',
  'last 2 Firefox versions',
  'last 2 Safari versions',
  'last 2 iOS versions',
  'last 2 Edge versions',
  'last 2 Opera versions',
];


// Base Options
export const base: gulppress.BaseConfig = {
  dirname: __dirname,
  envFile: '{{dotEnvPath}}',{{#if environment}}{{{environment}}}{{/if}}
  createSeparateMinFiles: {{createSeparateMinFiles}},
};
{{#if_task "scripts"}}

// Script Options
export const scripts: gulppress.ScriptConfig = {
  src: `${basePath}{{srcPath}}scripts/*.{{#if_feature "typescript"}}+(js|ts){{else}}js{{/if_feature}}`,
  dest: `${basePath}{{distPath}}js`,
  watch: `${basePath}{{distPath}}scripts/**/*.js`,
  targets: browserList,
  features: {
    typescript: {{#if_feature "typescript"}}true{{else}}false{{/if_feature}},
    typeChecks: {{#if_feature "typescript"}}true{{else}}false{{/if_feature}},
  },
};{{/if_task}}
{{#if_task "styles"}}

// Style options
export const styles: gulppress.StylesConfig = {
  src: `${basePath}{{srcPath}}styles/*.scss`,
  dest: `${basePath}{{distPath}}css`,
  watch: `${basePath}{{srcPath}}styles/**/*.scss`,
  postcssPlugins: [
    // Available autoprefixer options: https://github.com/postcss/autoprefixer#options
    autoprefixer({
      overrideBrowserslist: browserList,
    }),
  ],
  // Available node-sass options: https://github.com/sass/node-sass#options
  sassOptions: {
    includePaths: [
      'node_modules',
    ],
    outputStyle: 'expanded',
  },
};{{/if_task}}
{{#if_task "favicon"}}

// Favicon options
export const favicon: gulppress.FaviconConfig = {
  src: `${basePath}{{srcPath}}favicon/favicon.png`,
  dest: `${basePath}{{distPath}}favicon`,
  sizes: [
    16, // Generic
    32, // Generic
    48, // Generic
    96, // Generic
    { size: 120, rename: 'apple-touch-icon.png' }, // iPhone old
    128, // Generic, MS Tile
    { size: 152, rename: 'apple-touch-icon-152.png' }, // iPad
    { size: 167, rename: 'apple-touch-icon-167.png' }, // iPad Retina
    { size: 180, rename: 'apple-touch-icon-180.png' }, // iPhone Retina
    192, // Generic, Google Developer Web App Manifest Recommendation
    270, // MS Tile
    512, // Google Developer Web App Manifest Recommendation
  ],
  color: '#ffffff',
};{{/if_task}}
{{#if_task "fonts"}}

// Font options
export const fonts: gulppress.FontsConfig = {
  srcFolder: `${basePath}{{srcPath}}fonts`,
  src: `${basePath}{{srcPath}}fonts/*.+(ttf|woff|woff2)`,
  dest: `${basePath}{{distPath}}fonts`,
};{{/if_task}}
{{#if_task "icons"}}

// Icon options
export const icons: gulppress.IconsConfig = {
  src: `${basePath}{{srcPath}}icons/**/*.svg`,
  dest: `${basePath}{{distPath}}icons`,
  destPhpPartials: `${basePath}/template-parts/svg-icons`,
};{{/if_task}}
{{#if_task "images"}}

// Image options
export const images: gulppress.ImagesConfig = {
  src: `${basePath}{{srcPath}}images/**/*.+(jpg|jpeg|png|svg)`,
  dest: `${basePath}{{distPath}}images`,
  destPhpPartials: `${basePath}/template-parts/svg-images`,
};{{/if_task}}
{{#if_task "translation"}}

// Translation options
export const translation: gulppress.TranslationConfig = {
  src: `${basePath}/**/*.php`,
  dest: `${basePath}/languages/{{domain}}.pot`,
  // Available gulp-wp-pot options: https://github.com/wp-pot/wp-pot#options
  wpPotOptions: {
    domain: '{{domain}}',
    package: '{{projectName}}',
  },
};{{/if_task}}
{{#if_task "vendorScripts"}}

// Vendor scripts options
export const vendorScripts: gulppress.VendorScriptsConfig = {
  src: [],
  packages: [],
  dest: `${basePath}{{distPath}}js/vendor`,
};{{/if_task}}
